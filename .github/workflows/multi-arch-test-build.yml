name: Test Build

on:
  push:
  pull_request:

jobs:
  build:
    name: Test ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            target: x86-64
            runtime_test: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Determine branch name
        run: |
          BRANCH="ynezz/ynezz/network-quality-server"
          echo "Building for $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

          PACKAGES="network-quality-server"

          echo "Building $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV

      - name: Build
        uses: openwrt/gh-action-sdk@v3
        env:
          ARCH: ${{ matrix.arch }}-master
          FEEDNAME: packages_ci

      - name: Move created packages to project dir
        run: |
          cp bin/packages/${{ matrix.arch }}/packages_ci/*.ipk . || true
          echo "ARCHIVE_NAME=${{matrix.arch}}" >> $GITHUB_ENV

      - name: Generate metadata
        run: |
          cat << _EOF_ > PKG-INFO
          Metadata-Version: 2.1
          Name: ${{env.ARCHIVE_NAME}}
          Version: $BRANCH
          Author: $GITHUB_ACTOR
          Download-URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          Summary: $PACKAGES
          Platform: ${{ matrix.arch }}

          Modified packages:
          _EOF_
          for p in $PACKAGES
          do
            echo "  "$p >> PKG-INFO
          done
          echo >> PKG-INFO
          echo Full file listing: >> PKG-INFO
          ls -al *.ipk >> PKG-INFO || true
          cat PKG-INFO

      - name: Store packages
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.ARCHIVE_NAME}}-packages
          path: |
            *.ipk
            PKG-INFO

      - name: Store logs
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.ARCHIVE_NAME}}-logs
          path: |
            logs/
            PKG-INFO

      - name: Remove logs
        run: sudo rm -rf logs/ || true

      - name: Register QEMU
        if: ${{ matrix.runtime_test }}
        run: |
          sudo docker run --rm --privileged aptman/qus -s -- -p

      - name: Build Docker container
        if: ${{ matrix.runtime_test }}
        run: |
          docker build -t test-container --build-arg ARCH .github/workflows/
        env:
          ARCH: ${{ matrix.arch }}-${{ env.BRANCH }}

      - name: Test via Docker container
        if: ${{ matrix.runtime_test }}
        run: |
          docker run --rm -v $GITHUB_WORKSPACE:/ci test-container
